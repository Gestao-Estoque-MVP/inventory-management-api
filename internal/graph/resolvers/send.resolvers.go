package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"

	"github.com/diogoX451/inventory-management-api/internal/graph/model"
	"github.com/diogoX451/inventory-management-api/internal/service"
	"github.com/vektah/gqlparser/v2/gqlerror"
)

// SendEmail is the resolver for the sendEmail field.
func (r *mutationResolver) SendEmail(ctx context.Context, input model.Send) (*model.Message, error) {
	details := service.EmailDetails{
		Subject:    *input.Subject,
		TemplateID: input.TemplateID,
	}

	err := r.Resolver.EmailService.SendEmail(&details, input.TypeSend)

	if err != nil {
		return &model.Message{}, &gqlerror.Error{
			Message: "Error sending email " + err.Error(),
		}
	}

	return &model.Message{
		Message: "Email sent",
	}, nil
}
