// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type UserStatus string

const (
	UserStatusPreUsers UserStatus = "pre-users"
	UserStatusActive   UserStatus = "active"
	UserStatusInative  UserStatus = "inative"
)

func (e *UserStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserStatus(s)
	case string:
		*e = UserStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for UserStatus: %T", src)
	}
	return nil
}

type NullUserStatus struct {
	UserStatus UserStatus
	Valid      bool // Valid is true if UserStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserStatus) Scan(value interface{}) error {
	if value == nil {
		ns.UserStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserStatus), nil
}

type Address struct {
	ID         int32
	UserID     string
	Address    sql.NullString
	Street     sql.NullString
	City       sql.NullString
	State      sql.NullString
	PostalCode sql.NullString
	Country    sql.NullString
	Number     sql.NullString
	CreatedAt  time.Time
	UpdatedAt  sql.NullTime
}

type ContactInfo struct {
	ID        string
	Name      string
	Email     string
	Phone     sql.NullString
	CreatedAt time.Time
}

type Permission struct {
	ID          string
	Name        string
	Description string
}

type Role struct {
	ID          string
	Name        string
	Description string
}

type RolesPermission struct {
	ID           int32
	RoleID       string
	PermissionID string
}

type Tenant struct {
	ID   string
	Name sql.NullString
}

type User struct {
	ID             string
	Name           string
	Email          string
	Phone          sql.NullString
	DocumentType   sql.NullString
	DocumentNumber sql.NullString
	Password       sql.NullString
	Avatar         sql.NullString
	Status         UserStatus
	RegisterToken  sql.NullString
	TokenExpiresAt sql.NullTime
	CreatedAt      time.Time
	UpdatedAt      sql.NullTime
	RoleID         sql.NullString
	TenantID       string
}

type UsersPermission struct {
	ID           int32
	UserID       sql.NullString
	PermissionID sql.NullString
}
